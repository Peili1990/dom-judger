<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nv.dom.web.dao.game.GameMapper">

	<resultMap type="ApplyingGame" id="applyingGame">
		<id property="id" column="id"/>
		<result property="gameDesc" column="description"/>
		<result property="gameStatus" column="status"/>
		<result property="playerNum" column="player_num"/>
		<result property="startDate" column="startDate"/>
		<result property="replayEssayId" column="replay_essay_id"/>
		<result property="characterSelect" column="character_select"/>
		<collection property="players" column="id" javaType="List" ofType="User" select="queryGamePlayerDao"></collection>
	</resultMap>
	
	<resultMap type="ApplyingGame" id="allApplyingGame">
		<id property="id" column="id"/>
		<result property="gameDesc" column="description"/>
		<result property="playerNum" column="player_num"/>
		<result property="startDate" column="estimated_start_date"/>
		<result property="characterSelect" column="character_select"/>
		<collection property="judgers" column="id" javaType="List" ofType="String" select="queryGameJudgerDao"></collection>
	</resultMap>
	
	<select id="getAllApplyingGamesDao" resultMap="allApplyingGame">
	
		SELECT
			dg.id,
			dg.description,
			dg.player_num,
			dg.estimated_start_date,
			dg.character_select
		FROM
			d_game dg
		WHERE	
			dg.status = 1 	
	
	</select>
	
	<select id="queryGameJudgerDao" parameterType="long" resultType="String">
	
		SELECT 
			du.nickname
		FROM
			d_user du, d_player dp
		WHERE
			dp.role = "judger" AND dp.user_id = du.id AND dp.game_id = #{gameId} 
	
	</select>

	<select id="getApplyingGamesDao" parameterType="long" resultMap="applyingGame">
	
		SELECT
			dg.id,
			dg.description,
			dg.status,
			dg.player_num,
			dg.character_select,
			IF(ISNULL(actual_start_date),estimated_start_date,actual_start_date) AS startDate,
			dg.replay_essay_id
		FROM
			d_game dg LEFT JOIN d_player dp
		ON
			dg.status != 9 AND dg.status != 0 AND dp.role='judger' AND dp.game_id=dg.id AND dp.status = 8
		WHERE
			dp.user_id=#{userId}
		GROUP BY
			dg.id
		LIMIT 1
				
	</select>
	
	<select id="queryGamePlayerDao" parameterType="long" resultType="UserApplyInfo">
	
		SELECT 
			du.id AS userId,
			dp.id AS playerId,
			dp.status AS status,
			du.nickname AS nickname,
			DATE_FORMAT(dp.apply_time,'%Y-%c-%d %H:%i:%s') AS applyTime,
			dc.id AS characterId,
			dc.name AS characterName,
			dpr.is_sp AS isSp,
			dpr.sign AS sign,
			dpr.use_card AS useCard,
			dpr.identity_desc AS identityDesc,
			dpr.apply_pioneer AS applyPioneer
		FROM
			d_user du, d_player dp LEFT JOIN (d_character dc LEFT JOIN d_player_record dpr
												ON 
												dc.id=dpr.character_id ) 
		ON 
			dpr.player_id=dp.id 
		WHERE
			dp.user_id = du.id AND dp.game_id = #{gameId} 
	
	</select>
	
	<select id="queryHasAttendGameDao" parameterType="long" resultType="Integer">
	
		SELECT
			count(1)
		FROM
			d_player
		WHERE
			user_id = #{userId} AND status != 9
	
	</select>
	
	<insert id="applyForGameDao" parameterType="ApplyDTO">
	
		INSERT INTO d_player (
			user_id,
			role,
			game_id,
			apply_time,
			status
						
		) 
		VALUES (
			#{userId},
			"judger",
			#{gameId},
			NOW(),
			#{status}
		)
	
	</insert>
	
	<insert id="publishGameDao" parameterType="PublishGameDTO" useGeneratedKeys="true" keyProperty="gameId">
	
		<if test="gameId==0">
		INSERT INTO d_game (
			description,
			player_num,
			status,
			estimated_start_date,
			qq_group,
			remark,
			character_select	
		) 
		VALUES (
			#{gameDesc},
			#{playerNum},
			1,
			#{startDate},
			#{qqGroup},
			#{remark},
			#{characterSelect}
		)
		</if>
		<if test="gameId>0">
		UPDATE
			d_game dg
		SET
			dg.description = #{gameDesc},
			dg.estimated_start_date = #{startDate},
			dg.qq_group = #{qqGroup},
			dg.remark = #{remark}
		WHERE
			dg.id = #{gameId}
		</if>
	
	</insert>
	
	<insert id="kickPlayerDao" parameterType="KickPlayerDTO">
	
		INSERT INTO d_kick_record(
			game_id,
			judger_user_id,
			player_user_id,
			reason,
			kick_time
		) 
		VALUES(
			#{gameId},
			#{judgerUserId},
			(SELECT 
				dp.user_id 
			 FROM
				d_player dp
			 WHERE	
			 	dp.id=#{playerId}),
			#{reason},
			NOW()
		)
	
	</insert>
	
	<delete id="deletePlayerApplyInfoDao" parameterType="long">
		
		DELETE FROM
			d_player_record
		WHERE
			player_id = #{playerId};
		DELETE FROM
			d_player
		WHERE
			id = #{playerId};	
		
	</delete>
	
	<update id="changeStatusDao" parameterType="ChangeStatusDTO">
	
		UPDATE
			d_game dg
		SET
			dg.status=#{status}
			<if test="status == 4">
			,dg.actual_start_date=NOW()
			</if>
			<if test="status == 5">
			,dg.end_date=NOW()
			,dg.final_result=#{finalResult}
			</if>
		WHERE
			dg.id=#{gameId}
	
	</update>
	
	<update id="submitApplyListDao" parameterType="java.util.List">
	
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
				UPDATE 
					d_player_record dpr 
				<set>
				  	dpr.sign=#{item.sign},
				  	dpr.is_special=#{item.isSpecial},
				  	dpr.identity_desc=#{item.identityDesc},
				  	dpr.is_sp=#{item.isSp},
				  	dpr.camp=#{item.camp},
				  	dpr.is_life=#{item.isLife},
				  	dpr.is_mute=#{item.isMute},
				  	dpr.position=#{item.position},
				  	dpr.has_position=#{item.hasPosition},
				  	dpr.sex=#{item.sex}
				</set>  	
				WHERE
				  	dpr.player_id = #{item.playerId}
		 </foreach>
	
	</update>
	
	<select id="getFormListDao" parameterType="long" resultType="GameForm">
	
		SELECT
			df.id AS formId,
			df.header AS header,
			df.type AS type
			<if test="getContent==true">
			,df.content AS content
			</if>
		FROM
			d_form df
		WHERE
			df.game_id = #{gameId}
		ORDER BY
			df.create_time
		DESC
			
	</select>
	
	<insert id="createOrUpdateFormDao" parameterType="GameForm">
	
		<if test="formId>0">
			UPDATE 
				d_form df
			SET
				<if test="header != null">
					df.header=#{header},
				</if>				
				<if test="content != null">
					df.content=#{content},
				</if>
				<if test="type > 0">
					df.type=#{type},
				</if>
				df.update_time=NOW()
			WHERE
				df.id=#{formId}
		</if>
		<if test="formId==0">
			INSERT INTO d_form (
				game_id,
				header,
				create_time,
				type
			)
			VALUES(
				#{gameId},
				#{header},
				NOW(),
				#{type}
			);
		</if>
	
	</insert>
	
	<update id="clearFormDao" parameterType="long">
	
		UPDATE 
			d_player_record dpr, d_player dp
		SET
			dpr.action="",
			dpr.privilege="",
			dpr.feedback="",
			dpr.vote="",
			dpr.remark=""
		WHERE
			dpr.player_id=dp.id AND dp.game_id = #{gameId}
			
	</update>
	
	<select id="getFormContentDao" parameterType="long" resultType="String">
	
		SELECT
			df.content
		FROM
			d_form df
		WHERE
			df.id=#{formId}
	
	</select>
	
	<update id="updateReplayInfoDao">
	
		UPDATE
			d_game dg
		SET
			dg.replay_essay_id=#{essayId}
		WHERE
			dg.id=#{gameId}
	
	</update>
	
	<select id="getSubmitTimeDao" parameterType="long" resultType="Date">
	
		SELECT
			dpr.submit_time
		FROM
			d_player_record dpr
		WHERE
			dpr.player_id = #{playerId}
	
	</select>
	
	<select id="getCurStage" parameterType="long" resultType="Integer">
	
		SELECT
			type
		FROM	
			d_form
		WHERE
			game_id = #{gameId}
		ORDER BY
			create_time
		DESC
		LIMIT 1
	
	</select>

</mapper>